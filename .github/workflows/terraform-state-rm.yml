name: x - Terraform State Remove

on:
  workflow_dispatch:
    inputs:
      environment-slug:
        description: "Short key for the environment (used for tfvars/backends naming and concurrency controls)"
        required: true
        default: dev
      state-addresses:
        description: "JSON array of Terraform state addresses to remove"
        required: true
        default: '["",""]'
      terraform-folder:
        description: "Path to the Terraform configuration folder"
        required: false
        default: terraform
      terraform-var-file:
        description: "Optional override for the Terraform var file. Leave blank to use tfvars/<slug>.tfvars"
        required: false
        default: ""

permissions:
  id-token: write
  contents: read

jobs:
  terraform-state-remove:
    name: Terraform State Remove
    runs-on: ubuntu-latest
    environment: ${{ inputs['environment-slug'] == 'dev' && 'Development' || inputs['environment-slug'] == 'prd' && 'Production' || inputs['environment-slug'] }}
    concurrency:
      group: ${{ format('{0}-{1}-maintenance-state-rm', github.repository, inputs['environment-slug']) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Resolve Terraform paths
        id: resolve
        shell: bash
        env:
          INPUT_TERRAFORM_FOLDER: ${{ inputs['terraform-folder'] }}
          INPUT_TERRAFORM_VAR_FILE: ${{ inputs['terraform-var-file'] }}
          ENV_SLUG: ${{ inputs['environment-slug'] }}
        run: |
          set -euo pipefail

          TERRAFORM_FOLDER="${INPUT_TERRAFORM_FOLDER:-terraform}"

          if [ -z "$INPUT_TERRAFORM_VAR_FILE" ]; then
            TERRAFORM_VAR_FILE="tfvars/${ENV_SLUG}.tfvars"
          else
            TERRAFORM_VAR_FILE="$INPUT_TERRAFORM_VAR_FILE"
          fi

          DEFAULT_BACKEND_FILE="backends/${ENV_SLUG}.backend.hcl"

          if [ -f "${TERRAFORM_FOLDER}/${DEFAULT_BACKEND_FILE}" ]; then
            TERRAFORM_BACKEND_FILE="$DEFAULT_BACKEND_FILE"
          else
            TERRAFORM_BACKEND_FILE=""
          fi

          echo "terraform-folder=$TERRAFORM_FOLDER" >> "$GITHUB_OUTPUT"
          echo "terraform-var-file=$TERRAFORM_VAR_FILE" >> "$GITHUB_OUTPUT"
          echo "terraform-backend-file=$TERRAFORM_BACKEND_FILE" >> "$GITHUB_OUTPUT"

      - name: Validate state-rm inputs
        shell: bash
        env:
          STATE_ADDRESSES: ${{ inputs['state-addresses'] }}
        run: |
          set -euo pipefail
          echo "$STATE_ADDRESSES" | jq empty

      - name: Terraform remove state addresses
        uses: frasermolyneux/actions/terraform-state-rm@main
        with:
          terraform-folder: ${{ steps.resolve.outputs.terraform-folder }}
          terraform-var-file: ${{ steps.resolve.outputs.terraform-var-file }}
          terraform-backend-file: ${{ steps.resolve.outputs.terraform-backend-file }}
          AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          state-addresses: ${{ inputs['state-addresses'] }}
